<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--把对象的创建交给spring来管理-->
    <!--
    spring对bean的管理细节
        创建bean的三种方式
            - 使用默认构造函数创建bean对象
                在配置文件中使用bean标签，当该标签中只有id和class属性时，那么即采用类的
                默认构造函数创建对象，如果该类中没有默认构造函数，那么对象将无法创建
                <bean id="accountService"  class="com.itheima.service.impl.AccountServiceImpl"></bean>
            - 使用某个类中的方法创建对象，并存入spring容器
                对于第一种创建方式，我们可能会遇到一些问题，比如我们引入了一个jar包，该jar包
                中的类并没有默认构造函数，此时我们就无法使用第一种方式来获取对象了
                先创建工厂对象，然后再使用该工厂的方法创建对象
                <bean id="instanceFactory" class="com.itheima.factory.InstanceFactory"></bean>
                <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>

                ***这个工厂类可由我们自己编写，然后再在其中定义一个创建jar包中的对象的方法***
            - 使用某个类中的静态方法创建对象，并将其存入spring对象
                <bean id="accountService" class="com.itheima.factory.StaticFactory" factory-method="getAccountService"></bean>
            ***后两种方法就是用来解决jar包中类没有默认构造方法的问题的***
        bean对象的作用范围
        bean对象的生命周期
    -->
    <bean id="accountService" class="com.itheima.factory.StaticFactory" factory-method="getAccountService"></bean>

</beans>